<template>
  <Header :title.sync="title"/>
  <view class="header">
    <view class="logo">
      <Upload @change.user="change">
        <image slot="content" src="http://img.jihui88.com/{{logo}}" @error="error"/>
      </Upload>
    </view>
  </view>
  <view class="weui-cells weui-cells_in-small-appmsg">
    <view class="weui-cell weui-cell_access">
      <view class="weui-cell__bd">账号昵称</view>
      <view class="weui-cell__ft weui-cell__ft_in-access">
        <input style="height:10px;line-height:10px;" placeholder="请输入昵称" @blur="input" value="{{accountInfo.nickName}}"/>
      </view>
    </view>
    <view class="weui-cell weui-cell_access">
      <view class="weui-cell__bd">会员账号ID</view>
      <view class="weui-cell__ft">{{user.username}}</view>
    </view>
    <view class="weui-cell weui-cell_access">
      <view class="weui-cell__bd">注册时间</view>
      <view class="weui-cell__ft">{{user.addTime}}</view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import api from '@/api/api'
import Tips from '@/utils/Tips'
import Utils from '@/utils/Utils'
import Upload from '@/components/common/upload'
import Header from '@/components/common/header'
export default class Account extends wepy.page {
  components = {
    Upload,
    Header
  }

  data = {
    title: '账号信息',
    user: {},
    accountInfo: {},
    logo: ''
  }

  async onLoad() {
    let that = this
    if (this.$parent.globalData.accountInfo.headimg && this.$parent.globalData.user) {
      that.user = this.$parent.globalData.user
      that.user.addTime = Utils.formatTime(this.$parent.globalData.user.addTime)
      that.logo = this.$parent.globalData.accountInfo.headimg || ''
      this.accountInfo = this.$parent.globalData.accountInfo
      this.$apply()
    } else {
      this.$parent.getAccountInfo(function(res){
        //更新数据
        that.user = res.user
        that.user.addTime = Utils.formatTime(that.user.addTime)
        that.logo = res.accountInfo.headimg || ''
        that.accountInfo = res.accountInfo
        that.$apply()
      })
    }
  }

  methods = {
    change (text) {
      this.accountInfo.headimg = text.data
      this.logo = text.data
      this.save()
    },
    input (e) {
      this.accountInfo.nickName = e.detail.value
      this.save()
    }
  }

  async save () {
    const res = await api.accountInfo({
      id: this.user.userId,
      data: {
        model: JSON.stringify(this.accountInfo),
        _method: 'put'
      },
      method: 'post'
    })
    if (res.success) {
      this.$parent.globalData.accountInfo = this.accountInfo
      Tips.success("保存成功")
    }
  }

}
</script>
<style lang="less">
page{
  background: #f1f1f1;
}
.header{
  background: #373d40;
  text-align: center;height:200rpx;
}
.logo{
  padding-top:15rpx;
}
.j_upload{
  width:150rpx;
  height:150rpx;
  margin:0 auto;
  line-height:75px;
  image {
    max-width:150rpx;
    max-height: 150rpx;
    vertical-align:middle;
    border-radius: 75rpx;
  }
}
.icon-huiyuan1{
  background: #ff6700;color: #fff;font-size:32px;padding:15px;border-radius:50%;
}
</style>
